<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kh.artspark.product.model.dao.ProductMapper">

	<!-- 전체 상품 개수 조회 -->
	<select id="productAllCount" resultType="_int">
		SELECT
				COUNT(*)
		  FROM
		  		PRODUCT
	</select>
	
	<!-- 카테고리별 상품 개수 조회 -->
	<select id="productCategoryCount" parameterType="String" resultType="_int">
		SELECT
				COUNT(*)
		  FROM
		  		PRODUCT
		 WHERE
		 		PRODUCT_CATEGORY = #{category}
	</select>
	
	<resultMap id="productResultMap" type="hashmap">
	    <result property="productNo" column="PRODUCT_NO"/>
	    <result property="productTitle" column="PRODUCT_TITLE"/>
	    <result property="memId" column="MEM_ID"/>
	    <result property="memNickname" column="MEM_NICKNAME"/>
	    <result property="productPurpose" column="PRODUCT_PURPOSE"/>
	    <result property="avgStar" column="AVG_STAR"/>
	    <result property="minPrice" column="MIN_PRICE"/>
	    <result property="isLiked" column="IS_LIKED"/>
	    <result property="changeName" column="CHANGE_NAME"/>
	    <result property="filePath" column="FILE_PATH"/>
	</resultMap>
	
	<!-- 모든 상품 목록 조회 -->
	<select id="findAllProductList" resultMap="productResultMap">
		SELECT
				P.PRODUCT_NO,
				P.PRODUCT_TITLE,
				M.MEM_ID,
				M.MEM_NICKNAME,
				PD.PRODUCT_PURPOSE,
				NVL(AVG(R.REVIEW_STAR), 0) AS AVG_STAR,
				NVL(MIN_DO.MIN_PRICE, 0) AS MIN_PRICE,
				NVL(JB.IS_LIKED, 0) AS IS_LIKED	,
				PF.CHANGE_NAME,		
				PF.FILE_PATH
		  FROM
		  		PRODUCT P
		  		JOIN 		MEMBER M ON P.MEM_ID = M.MEM_ID
		  		JOIN 		PRODUCT_DETAIL PD ON P.PRODUCT_NO = PD.PRODUCT_NO
		  		LEFT JOIN 	REVIEW R ON P.PRODUCT_NO = R.PRODUCT_NO
		  		JOIN 	(
			  				SELECT
			  						PO.PRODUCT_NO,
			  						MIN(DO.DETAIL_OPTION_PRICE) MIN_PRICE
			  				  FROM
			  					  	PAY_OPTION PO
			  					  	JOIN DETAIL_OPTION DO ON PO.PAY_OPTION_NO = DO.PAY_OPTION_NO
			  				 GROUP
			  					BY
			  					 	PO.PRODUCT_NO	
			  			  )	MIN_DO ON P.PRODUCT_NO = MIN_DO.PRODUCT_NO
		  		LEFT JOIN (
		  					SELECT
		  							J.PRODUCT_NO,
		  							1 AS IS_LIKED
		  					  FROM
		  					  		JJIM J
		  					 WHERE
		  							J.MEM_ID = #{loginUserId}		
		  				  )	JB ON P.PRODUCT_NO = JB.PRODUCT_NO 	
		  		JOIN PRODUCTFILE PF ON P.PRODUCT_NO = PF.PRODUCT_NO
		  		JOIN 	(
		  					SELECT
		  							PRODUCT_NO,
		  							MIN(FILE_NO) FIRST_NO
		  					  FROM
		  					  		PRODUCTFILE
		  					 GROUP
		  					 	BY
		  					 		PRODUCT_NO
		  				) PF_MIN ON PF.FILE_NO = PF_MIN.FIRST_NO
		 GROUP
		 	BY
		 		P.PRODUCT_NO,
	            P.PRODUCT_TITLE,
	            M.MEM_ID,
	            M.MEM_NICKNAME,
	            PD.PRODUCT_PURPOSE,
	            MIN_DO.MIN_PRICE,
	            JB.IS_LIKED,
	            PF.CHANGE_NAME,		
				PF.FILE_PATH
	     ORDER
	     	BY
	     		P.PRODUCT_NO DESC
	</select>
	
	<insert id="insertJjim" parameterType="map">
		INSERT
		  INTO
		  		JJIM
		  		(
		  		MEM_ID,
		  		PRODUCT_NO,
		  		JJIM_DATE
		  		)
		VALUES
				(
				#{loginId},
				#{productNo},
				DEFAULT
				)
	</insert>
	
	<delete id="deleteJjim" parameterType="map">
		DELETE
		  FROM
		  		JJIM
		 WHERE
		 		MEM_ID = #{loginId}
		   AND
		   		PRODUCT_NO = #{productNo}
	</delete>
	
	<!-- 상품 상세 페이지 resultMap -->
	<resultMap id="productDetailMap" type="hashmap">
		<result property="productCategory" column="PRODUCT_CATEGORY"/>
		<result property="productNo" column="PRODUCT_NO"/>
		<result property="memId" column="MEM_ID"/>
		<result property="productTitle" column="PRODUCT_TITLE"/>
		<result property="productContent" column="PRODUCT_CONTENT"/>
		<result property="productPurpose" column="PRODUCT_PURPOSE"/>
		<result property="detailType" column="DETAIL_TYPE"/>
		<result property="detailSize" column="DETAIL_SIZE"/>
		<result property="detailPixel" column="DETAIL_PIXEL"/>
		<result property="updateCount" column="UPDATE_COUNT"/>
		<result property="detailWorkdate" column="DETAIL_WORKDATE"/>
		<result property="artistIntro" column="ARTIST_INTRO"/>
		<result property="avgStar" column="AVG_STAR"/>
		<result property="isLiked" column="IS_LIKED"/>
		<result property="memNickname" column="MEM_NICKNAME"/>
		<collection property="payOptionList" resultMap="payOptionResultMap" javaType="list" />
	</resultMap>
	
	<resultMap id="payOptionResultMap" type="payOption">
		<result property="payOptionNo" column="PAY_OPTION_NO"/>
		<result property="optionName" column="OPTION_NAME"/>
		<collection property="detailOptionList" resultMap="detailOptionResultMap" javaType="list" />
	</resultMap>
	
	<resultMap id="detailOptionResultMap" type="detailOption">
		<result property="detailOptionNo" column="DETAIL_OPTION_NO"/>
		<result property="detailOptionName" column="DETAIL_OPTION_NAME"/>
		<result property="detailOptionPrice" column="DETAIL_OPTION_PRICE"/>
	</resultMap>
	
	<!-- 상품 번호로 상품 상세정보 조회 -->
	<select id="findById" parameterType="map" resultMap="productDetailMap">
		SELECT
		        P.PRODUCT_CATEGORY,
		        P.PRODUCT_NO,
		        P.MEM_ID,
		        P.PRODUCT_TITLE,
		        P.PRODUCT_CONTENT,
		        PD.PRODUCT_PURPOSE,
		        PD.DETAIL_TYPE,
		        PD.DETAIL_SIZE,
		        PD.DETAIL_PIXEL,
		        PD.UPDATE_COUNT,
		        PD.DETAIL_WORKDATE,
		        ART.ARTIST_INTRO,
		        ROUND(NVL(AVG(R.REVIEW_STAR),0), 1) AS AVG_STAR,
		        NVL(JB.IS_LIKED, 0) AS IS_LIKED,
		        PDO.PAY_OPTION_NO,
		        PDO.OPTION_NAME,
		        PDO.DETAIL_OPTION_NO,
		        PDO.DETAIL_OPTION_NAME,
		        PDO.DETAIL_OPTION_PRICE,
		        M.MEM_NICKNAME
		  FROM
		        PRODUCT P
		        JOIN PRODUCT_DETAIL PD ON P.PRODUCT_NO = PD.PRODUCT_NO
		        JOIN    (
		                    SELECT
		                            A.ARTIST_INTRO,
		                            M.MEM_ID
		                      FROM
		                            ARTIST A
		                            JOIN MEMBER M ON M.MEM_ID = A.MEM_ID
		                 ) ART ON P.MEM_ID = ART.MEM_ID
		        LEFT JOIN   REVIEW R ON P.PRODUCT_NO = R.PRODUCT_NO
		        LEFT JOIN (
		                    SELECT
		                            J.PRODUCT_NO,
		                            1 AS IS_LIKED
		                      FROM
		                            JJIM J
		                     WHERE
		                            J.MEM_ID = #{loginId}
		                  ) JB ON P.PRODUCT_NO = JB.PRODUCT_NO 
		      	JOIN	(
		      				SELECT
		      						DO.DETAIL_OPTION_NO,
		      						DO.DETAIL_OPTION_NAME,
		      						DO.DETAIL_OPTION_PRICE,
		      						PO.PRODUCT_NO,
		      						PO.PAY_OPTION_NO,
                            		PO.OPTION_NAME
		      				  FROM
		      				  		DETAIL_OPTION DO
		      				  		JOIN PAY_OPTION PO ON PO.PAY_OPTION_NO = DO.PAY_OPTION_NO
		      				 ORDER
		      				 	BY
		      				 		DO.DETAIL_OPTION_NO DESC
		      			) PDO ON P.PRODUCT_NO = PDO.PRODUCT_NO
		      	JOIN MEMBER M ON P.MEM_ID = M.MEM_ID
		 WHERE
		        P.PRODUCT_NO = #{productNo}
		 GROUP
		    BY
		        P.PRODUCT_CATEGORY,
		        P.PRODUCT_NO,
		        P.MEM_ID,
		        P.PRODUCT_TITLE,
		        P.PRODUCT_CONTENT,
		        PD.PRODUCT_PURPOSE,
		        PD.DETAIL_TYPE,
		        PD.DETAIL_SIZE,
		        PD.DETAIL_PIXEL,
		        PD.UPDATE_COUNT,
		        PD.DETAIL_WORKDATE,
		        ART.ARTIST_INTRO,
		        JB.IS_LIKED,
		        PDO.PAY_OPTION_NO,
		        PDO.OPTION_NAME,
		        PDO.DETAIL_OPTION_NO,
		        PDO.DETAIL_OPTION_NAME,
		        PDO.DETAIL_OPTION_PRICE,
		        M.MEM_NICKNAME
	</select>
	
	<resultMap type="productFile" id="productFileMap">
		<result property="fileNo" column="FILE_NO"/>
		<result property="originName" column="ORIGIN_NAME"/>
		<result property="changeName" column="CHANGE_NAME"/>
		<result property="filePath" column="FILE_PATH"/>
		<result property="fileDate" column="FILE_DATE"/>
	</resultMap>
	
	<select id="findByIdFile" parameterType="_int" resultMap="productFileMap">
		SELECT
		        PF.FILE_NO,
		        PF.ORIGIN_NAME,
		        PF.CHANGE_NAME,
		        PF.FILE_PATH,
		        PF.FILE_DATE
		  FROM
		        PRODUCTFILE PF
		        JOIN PRODUCT P ON P.PRODUCT_NO = PF.PRODUCT_NO
		 WHERE
		        PF.PRODUCT_NO = #{productNo}
		 ORDER
		    BY
		        PF.FILE_NO
	</select>
	
	<select id="findByIdTag" parameterType="_int" resultType="tag">
		SELECT
				T.TAG_NAME tagName
		  FROM
		  		TAG T
		  		JOIN	(
		  				SELECT
		  						TAG_NO
		  				  FROM
		  				  		TAG_CHECK
		  				 WHERE
		  				 		PRODUCT_NO = #{productNo} 
		  				) TC ON TC.TAG_NO = T.TAG_NO  
	</select>
	
	<insert id="insertProduct" parameterType="product">
		INSERT
		  INTO
		  		PRODUCT
		  		(
  				PRODUCT_NO,
  				PRODUCT_CATEGORY,
  				PRODUCT_TITLE,
  				PRODUCT_CONTENT,
  				PRODUCT_DATE,
  				MEM_ID
  				)
		VALUES
				(
				PRODUCT_SEQ.NEXTVAL,
				#{productCategory},
				#{productTitle},
				#{productContent},
				DEFAULT,
				#{memId}
				)
		<selectKey keyProperty="productNo" resultType="int" order="AFTER">
		SELECT PRODUCT_SEQ.CURRVAL FROM DUAL
		</selectKey>
	</insert>
	
	<insert id="insertProductDetail" parameterType="productDetail">
		INSERT
		  INTO
		  		PRODUCT_DETAIL
		  		(
		  		PRODUCT_NO,
		  		PRODUCT_PURPOSE,
		  		DETAIL_TYPE,
		  		DETAIL_SIZE,
		  		DETAIL_PIXEL,
		  		UPDATE_COUNT,
		  		DETAIL_WORKDATE
		  		)
		VALUES
				(
				#{productNo},
				#{productPurpose},
				#{detailType},
				#{detailSize},
				#{detailPixel},
				#{updateCount},
				#{detailWorkdate}
				)
	</insert>
	
	<select id="tagCheck" parameterType="tag" resultType="integer">
		SELECT
				TAG_NO tagNo
		  FROM
		  		TAG
		 WHERE
		 		TAG_NAME = #{tagName}
	</select>
	
	<insert id="insertTagCheck" parameterType="tag">
		INSERT
		  INTO
		  		TAG
		  		(
		  		TAG_NO,
		  		TAG_NAME
		  		)
		VALUES
				(
				TAG_SEQ.NEXTVAL,
				#{tagName}
				)
		<selectKey keyProperty="tagNo" order="AFTER" resultType="int">
		SELECT TAG_SEQ.CURRVAL FROM DUAL	
		</selectKey>
	</insert>
	
	<insert id="insertTag" parameterType="tagCheck">
		INSERT
		  INTO
		  		TAG_CHECK
		  		(
		  		TAG_CHECK_NO,
		  		PRODUCT_NO,
		  		TAG_NO
		  		)
		VALUES
				(
				TAG_CHECK_SEQ.NEXTVAL,
				#{productNo},
				#{tagNo}
				)
	</insert>
	
	<insert id="insertProductFile" parameterType="productFile">
		INSERT
		  INTO
		  		PRODUCTFILE
		  		(
		  		FILE_NO,
		  		ORIGIN_NAME,
		  		CHANGE_NAME,
		  		FILE_PATH,
		  		FILE_DATE,
		  		PRODUCT_NO
		  		)
		VALUES
				(
				PRODUCTFILE_SEQ.NEXTVAL,
				#{originName},
				#{changeName},
				#{filePath},
				DEFAULT,
				#{productNo}
				)
	</insert>
	
	<insert id="insertPayOption" parameterType="payOption">
		INSERT
		  INTO
		  		PAY_OPTION
		  		(
		  		PAY_OPTION_NO,
		  		OPTION_NAME,
		  		PRODUCT_NO
		  		)
		VALUES
				(
				PAY_OPTION_SEQ.NEXTVAL,
				#{optionName},
				#{productNo}
				)
		<selectKey keyProperty="payOptionNo" resultType="int" order="AFTER">
		SELECT PAY_OPTION_SEQ.CURRVAL FROM DUAL	
		</selectKey>
	</insert>
	
	<insert id="insertDetailOption" parameterType="detailOption">
		INSERT
		  INTO
				DETAIL_OPTION
				(
				DETAIL_OPTION_NO,
				DETAIL_OPTION_NAME,
				DETAIL_OPTION_PRICE,
				PAY_OPTION_NO
				)
		VALUES
				(
				DETAIL_OPTION_SEQ.NEXTVAL,
				#{detailOptionName},
				#{detailOptionPrice},
				#{payOptionNo}
				)		  
	</insert>
	
</mapper>










